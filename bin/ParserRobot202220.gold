using gold.**

toSet(C) :=  {x|  x in C}

///====   mini Parser===

function createParser(A):IPushdownAutomaton begin
	Q:=(0‥7)
	Σ:=toSet(A)  ∪ {' ', '\n'}
	Γ:={'$'} ∪ toSet(A)
	q₀:=0
	F:= {0}
	M:=GPushdownAutomaton(Q,Σ,Γ,q₀,F)
	SkipChars := {' ', '\n'}   // this will only  be used when testing only the parser as the lexer removes  SkipChars

	// 6%v,v,v;[v(v,v){@(v);@(v);w(v)}][v(){8(C(O,#))<{w(O,#)}>}][v(){i(C(O,#)){w(O,#)}f}]{v(#,#);v=#;v(#,#)}9

	// 6%v;9

	M.delta(0,1,'6').push("$")
	M.delta(1,1, '%').changeTop("$", "$;v")
	M.delta(1,1, 'v').pop("v")
	M.delta(1,1, ',').changeTop("$;", "$;v")
	M.delta(1,0, ';').pop(";")
	M.delta(0,0,'9').pop("$")


 // this will only  be used when testing only the parser as the lexer removes  SkipChars
for each q in Q do
	for each s in SkipChars do
	M.delta(q,q,λ+s).ignore()
end
end


return M
end

