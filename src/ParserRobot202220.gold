using gold.**

toSet(C) :=  {x|  x in C}

///====   mini Parser===

function createParser(A):IPushdownAutomaton begin
	Q:=(0‥9)
	Σ:=toSet(A)  ∪ {' ', '\n'}
	Γ:={'$'} ∪ toSet(A)
	q₀:=0
	F:= {0}
	M:=GPushdownAutomaton(Q,Σ,Γ,q₀,F)
	SkipChars := {' ', '\n'}   // this will only  be used when testing only the parser as the lexer removes  SkipChars

	// 6%v,v,v;[v(v,v){@(v);@(v);w(v)}][v(){8(C(O,#))<{w(O,#)}>}][v(){i(C(O,#)){w(O,#)}f}]{v(#,#);v=#;v(#,#)}9

	// 6%v;[v(v,v)9


	// Transitions

	M.delta(0,1,'6').push("$") // PROG

	// VARIABLES

	M.delta(1,1, '%').changeTop("$", "$;v")
	M.delta(1,1, 'v').pop("v")
	M.delta(1,1, ',').changeTop("$;", "$;v")
	M.delta(1,2, ';').pop(";")

	// PROCEDURES

	M.delta(2,2,'[').push("(v")
	M.delta(2,2,'v').pop("v")
	M.delta(2,3,'(').changeTop("$(", "$(v")
	M.delta(2,4,'(').ignore()

	// PROCEDURE PARAMETERS

	M.delta(3,3,'v').pop("v")
	M.delta(3,3,',').changeTop("$(", "$(v")
	M.delta(3,4,')').pop("(")

	M.delta(4,4,')').changeTop("$(", "$")

	M.delta(4,5,'{').push("}")

	// PROCEDURE BODY

	M.delta(5,6,'@').push(")#(")
	M.delta(5,6,'@').push(")v(")
	M.delta(5,7,'j').push(")#,#(")
	M.delta(5,7,'j').push(")v,#(")
	M.delta(5,7,'j').push(")#,v(")
	M.delta(5,7,'j').push(")v,v(")
	M.delta(5,8,'V').push(")L(")
	M.delta(5,8,'V').push(")R(")
	M.delta(5,8,'V').push(")A(")
	M.delta(5,9,'l').push(")O(")

	M.delta(5,0,'}').pop("}")

	// PROCEDURE CALL @

	M.delta(6,6,'(').pop("(")
	M.delta(6,6,'#').pop("#")
	M.delta(6,6,'v').pop("v")
	M.delta(6,6,')').pop(")")
	M.delta(6,5,';').ignore()

	// PROCEDURE CALL j

	M.delta(7,7,'(').pop("(")
	M.delta(7,7,'#').pop("#")
	M.delta(7,7,'v').pop("v")
	M.delta(7,7,',').pop(",")
	M.delta(7,7,')').pop(")")
	M.delta(7,5,';').ignore()

	// PROCEDURE CALL V

	M.delta(8,8,'(').pop("(")
	M.delta(8,8,'L').pop("L")
	M.delta(8,8,'R').pop("R")
	M.delta(8,8,'A').pop("A")
	M.delta(8,8,')').pop(")")
	M.delta(8,5,';').ignore()

	// PROCEDURE CALL l

	M.delta(9,9,'(').pop("(")
	M.delta(9,9,'O').pop("O")
	M.delta(9,9,')').pop(")")
	M.delta(9,5,';').ignore()

	M.delta(0,0,'9').pop("$") //GORP


 // this will only  be used when testing only the parser as the lexer removes  SkipChars
for each q in Q do
	for each s in SkipChars do
	M.delta(q,q,λ+s).ignore()
end
end


return M
end

